
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

package com.sharefile.api.models;

import java.io.InputStream;
import java.util.ArrayList;
import java.net.URI;
import java.util.Date;
 
import com.google.gson.annotations.SerializedName;
import com.sharefile.api.enumerations.SFSafeEnum;

public class SFAccessControl extends SFODataObject {

	@SerializedName("Item")
	private SFItem Item;
	@SerializedName("Principal")
	private SFPrincipal Principal;
	@SerializedName("CanUpload")
	private Boolean CanUpload;
	@SerializedName("CanDownload")
	private Boolean CanDownload;
	@SerializedName("CanView")
	private Boolean CanView;
	@SerializedName("CanDelete")
	private Boolean CanDelete;
	@SerializedName("CanManagePermissions")
	private Boolean CanManagePermissions;
	@SerializedName("NotifyOnUpload")
	private Boolean NotifyOnUpload;
	@SerializedName("NotifyOnDownload")
	private Boolean NotifyOnDownload;
	@SerializedName("IsOwner")
	private Boolean IsOwner;

		/**
		* Item that was given permission through this rule
		*/
	public SFItem getItem() {
		return Item;
	}

		/**
		* Item that was given permission through this rule
		*/
	public void setItem(SFItem item) {
		Item = item;
	}
	public SFPrincipal getPrincipal() {
		return Principal;
	}

	public void setPrincipal(SFPrincipal principal) {
		Principal = principal;
	}
		/**
		* Defines whether the principal can add files (upload) into the Item
		*/
	public Boolean getCanUpload() {
		return CanUpload;
	}

		/**
		* Defines whether the principal can add files (upload) into the Item
		*/
	public void setCanUpload(Boolean canupload) {
		CanUpload = canupload;
	}
		/**
		* Defines whether the principal can read file content (download) from this Item
		*/
	public Boolean getCanDownload() {
		return CanDownload;
	}

		/**
		* Defines whether the principal can read file content (download) from this Item
		*/
	public void setCanDownload(Boolean candownload) {
		CanDownload = candownload;
	}
		/**
		* Defines whether the principal can view items (browse) from this Item
		*/
	public Boolean getCanView() {
		return CanView;
	}

		/**
		* Defines whether the principal can view items (browse) from this Item
		*/
	public void setCanView(Boolean canview) {
		CanView = canview;
	}
		/**
		* Defines whether the principal can remove items from this Item
		*/
	public Boolean getCanDelete() {
		return CanDelete;
	}

		/**
		* Defines whether the principal can remove items from this Item
		*/
	public void setCanDelete(Boolean candelete) {
		CanDelete = candelete;
	}
		/**
		* Defines whether the principal can configure Access Controls in this Item
		*/
	public Boolean getCanManagePermissions() {
		return CanManagePermissions;
	}

		/**
		* Defines whether the principal can configure Access Controls in this Item
		*/
	public void setCanManagePermissions(Boolean canmanagepermissions) {
		CanManagePermissions = canmanagepermissions;
	}
		/**
		* Defines the notification preference for upload events. If set, the principal will receive
		* notifications when new files are uploaded into this Item
		*/
	public Boolean getNotifyOnUpload() {
		return NotifyOnUpload;
	}

		/**
		* Defines the notification preference for upload events. If set, the principal will receive
		* notifications when new files are uploaded into this Item
		*/
	public void setNotifyOnUpload(Boolean notifyonupload) {
		NotifyOnUpload = notifyonupload;
	}
		/**
		* Defines the notification preference for download events. If set, the principal will receive
		* notifiation when items are downloaded from this Item.
		*/
	public Boolean getNotifyOnDownload() {
		return NotifyOnDownload;
	}

		/**
		* Defines the notification preference for download events. If set, the principal will receive
		* notifiation when items are downloaded from this Item.
		*/
	public void setNotifyOnDownload(Boolean notifyondownload) {
		NotifyOnDownload = notifyondownload;
	}
		/**
		* Defines whether the principal is the owner of this Item
		*/
	public Boolean getIsOwner() {
		return IsOwner;
	}

		/**
		* Defines whether the principal is the owner of this Item
		*/
	public void setIsOwner(Boolean isowner) {
		IsOwner = isowner;
	}
}