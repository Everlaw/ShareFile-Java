
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2015 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

package com.sharefile.api.internal.entities;

import com.sharefile.api.entities.*;
import com.sharefile.api.SFApiQuery;
import com.sharefile.api.exceptions.InvalidOrMissingParameterException;
import com.sharefile.api.interfaces.ISFApiClient;
import com.sharefile.api.interfaces.ISFQuery;
import com.sharefile.api.internal.models.SFInAppPurchase;
import com.sharefile.api.internal.models.SFPlanAddon;
import com.sharefile.api.internal.models.SFPlanAddonUser;
import com.sharefile.api.internal.models.SFTrialPeriod;

public class SFPlanAddonsEntityInternal extends SFODataEntityBase
{
	public SFPlanAddonsEntityInternal(ISFApiClient client) {
		super(client);
	}

	/**
	* Get Plan add-ons
	* @param productCode 	 	
	* @return PlanAddons
	*/
	public ISFQuery<SFPlanAddon> get(String productCode) throws InvalidOrMissingParameterException 	{
		if (productCode == null) {
			throw new InvalidOrMissingParameterException("productCode");
		}

		SFApiQuery<SFPlanAddon> sfApiQuery = new SFApiQuery<SFPlanAddon>(this.apiClient);
		sfApiQuery.setFrom("PlanAddons");
		sfApiQuery.addQueryString("productCode", productCode);
		sfApiQuery.setHttpMethod("GET");
		return sfApiQuery;
	}

	/**
	* Create inApp Purchase
    * {
    * "ProductId": "productId"
    * }
	* @param inAppPurchase 	 	
	* @return inAppPurchase created
	*/
	public ISFQuery<SFPlanAddon> createInAppPurchase(SFInAppPurchase inAppPurchase) throws InvalidOrMissingParameterException 	{
		if (inAppPurchase == null) {
			throw new InvalidOrMissingParameterException("inAppPurchase");
		}

		SFApiQuery<SFPlanAddon> sfApiQuery = new SFApiQuery<SFPlanAddon>(this.apiClient);
		sfApiQuery.setFrom("PlanAddons");
		sfApiQuery.setAction("InAppPurchase");
		sfApiQuery.setBody(inAppPurchase);
		sfApiQuery.setHttpMethod("POST");
		return sfApiQuery;
	}

	/**
	* Create Trial Period
    * {
    * "ProductId": "productId"
    * }
	* @param trialPeriod 	 	
	* @return TrialPeriod created
	*/
	public ISFQuery<SFPlanAddon> createTrialPeriod(SFTrialPeriod trialPeriod) throws InvalidOrMissingParameterException 	{
		if (trialPeriod == null) {
			throw new InvalidOrMissingParameterException("trialPeriod");
		}

		SFApiQuery<SFPlanAddon> sfApiQuery = new SFApiQuery<SFPlanAddon>(this.apiClient);
		sfApiQuery.setFrom("PlanAddons");
		sfApiQuery.setAction("TrialPeriod");
		sfApiQuery.setBody(trialPeriod);
		sfApiQuery.setHttpMethod("POST");
		return sfApiQuery;
	}

	/**
	* Get User Info
	* @param productCode 	 	
	* @return PlanAddonUser with info
	*/
	public ISFQuery<SFPlanAddonUser> getUserInfo(String productCode) throws InvalidOrMissingParameterException 	{
		if (productCode == null) {
			throw new InvalidOrMissingParameterException("productCode");
		}

		SFApiQuery<SFPlanAddonUser> sfApiQuery = new SFApiQuery<SFPlanAddonUser>(this.apiClient);
		sfApiQuery.setFrom("PlanAddons");
		sfApiQuery.setAction("UserInfo");
		sfApiQuery.addQueryString("productCode", productCode);
		sfApiQuery.setHttpMethod("GET");
		return sfApiQuery;
	}

}

