
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//	   Copyright (c) 2014 Citrix ShareFile. All rights reserved.
// </auto-generated>
// ------------------------------------------------------------------------------

package com.sharefile.api.entities;


import java.util.stream;

public class SFFavoriteFoldersEntity extends SFODataEntityBase
{
    /**
	* Get List of FavoriteFolders
	* Retrieves the list of Favorite folders for a given user.
	* @param id 	
	* @return A list of Favorite Folders specified by this user
    */
	public SFApiQuery<SFODataFeed<SFFavoriteFolder>> getByUser(String id)
	{
		SFApiQuery<SFODataFeed<SFFavoriteFolder>> sfApiQuery = new SFApiQuery<SFODataFeed<SFFavoriteFolder>>();
		sfApiQuery.setFrom("Users");
		sfApiQuery.setAction("FavoriteFolders");
		sfApiQuery.addIds(id);
		sfApiQuery.setHttpMethod("GET");
		return sfApiQuery;
	}

    /**
	* Get FavoriteFolder
	* Retrieves a single Favorite Folder
	* @param userid 	
	* @param itemid 	
	* @return A list of Favorite Folders specified by this user
    */
	public SFApiQuery<SFFavoriteFolder> getByUser(String itemid, String userid)
	{
		SFApiQuery<SFFavoriteFolder> sfApiQuery = new SFApiQuery<SFFavoriteFolder>();
		sfApiQuery.setFrom("Users");
		sfApiQuery.setAction("FavoriteFolders");
		sfApiQuery.addIds(itemid);
		sfApiQuery.addActionIds(userid);
		sfApiQuery.setHttpMethod("GET");
		return sfApiQuery;
	}

    /**
	* Get FavoriteFolder
	* Retrieve a single Favorite Folder from a give user
	* @param userid 	
	* @param itemid 	
	* @return The selected Favorite Folder
    */
	public SFApiQuery<SFFavoriteFolder> get(String userid, String itemid)
	{
		SFApiQuery<SFFavoriteFolder> sfApiQuery = new SFApiQuery<SFFavoriteFolder>();
		sfApiQuery.setFrom("FavoriteFolders");
		sfApiQuery.addIds("userid", userid);
		sfApiQuery.addIds("itemid", itemid);
		sfApiQuery.setHttpMethod("GET");
		return sfApiQuery;
	}

    /**
	* Create FavoriteFolder
    * {
    * "Folder": { "Id":"fo96aec5-d637-4124-bcc9-c86fd7301e4d" },
    * "FolderAlias" : "alias"
    * }
	* Adds an existing folder to the list of favorites of a given user.
	* @param id 	
	* @param folder 	
	* @return A new FavoriteFolder record
    */
	public SFApiQuery<SFFavoriteFolder> createByUser(String id, SFFavoriteFolder folder)
	{
		SFApiQuery<SFFavoriteFolder> sfApiQuery = new SFApiQuery<SFFavoriteFolder>();
		sfApiQuery.setFrom("Users");
		sfApiQuery.setAction("FavoriteFolders");
		sfApiQuery.addIds(id);
		sfApiQuery.setBody(folder);
		sfApiQuery.setHttpMethod("POST");
		return sfApiQuery;
	}

    /**
	* Delete FavoriteFolder
	* Removes a favorite folder from a user's list.
	* @param id 	
	* @param itemid 	
    */
	public SFApiQuery delete(String id, String itemid)
	{
		SFApiQuery sfApiQuery = new SFApiQuery();
		sfApiQuery.setFrom("Users");
		sfApiQuery.setAction("FavoriteFolders");
		sfApiQuery.addIds(id);
		sfApiQuery.addActionIds(itemid);
		sfApiQuery.setHttpMethod("DELETE");
		return sfApiQuery;
	}

	public SFApiQuery deleteByUser(String userId, String itemId)
	{
		SFApiQuery sfApiQuery = new SFApiQuery();
		sfApiQuery.setFrom("Users");
		sfApiQuery.setAction("FavoriteFolders");
		sfApiQuery.addIds(userId);
		sfApiQuery.addActionIds(itemId);
		sfApiQuery.setHttpMethod("DELETE");
		return sfApiQuery;
	}

}

